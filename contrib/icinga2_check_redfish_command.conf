object CheckCommand "redfish" {
    import "ipv4-or-ipv6"

    command = [ PluginContribDir + "/check_redfish/check_redfish.py" ]

    arguments = {
        "--host" = {
            value = "$redfish_hostname$"
            description = "hostname or address of the interface to query"
            required = true
        }
        "--username" = {
            value = "$redfish_username$"
            description = "The login user name"
        }
        "--password" = {
            value = "$redfish_password$"
            description = "The login password"
        }
        "--authfile" = {
            value = "$redfish_authfile$"
            description = "Authentication file content: \
                                                    username=<username>  \
                                                    password=<password>"
        }
        "--sessionfile" = {
            value = "$redfish_sessionfile$"
            description = "Name of the session file. make sure it is unique for every host"
        }
        "--sessionfiledir" = {
            value = "$redfish_sessionfiledir$"
            description = "Directory where the session files should be stored"
        }
        "--sessionlock" = {
            set_if = "$redfish_sessionlock$"
            description = "Create a session lock file to prevent parallel connection sessions"
        }
        "--warning" = {
            value = "$redfish_warning$"
            description = "Warning threshold for certain checks. See documentation"
        }
        "--critical" = {
            value = "$redfish_critical$"
            description = "Critical threshold for certain checks. See documentation"
        }
        "--detailed" = {
            set_if = "$redfish_detailed$"
            description = "always print detailed result instead of a condensed one line result"
        }
        "--max" = {
            value = "$redfish_max$"
            description = "maximum of returned event log entries"
        }
        "--storage" = {
            set_if = "$redfish_storage$"
            description = "request storage health"
        }
        "--proc" = {
            set_if = "$redfish_proc$"
            description = "request processor health"
        }
        "--memory" = {
            set_if = "$redfish_memory$"
            description = "request memory module health"
        }
        "--power" = {
            set_if = "$redfish_power$"
            description = "request power supply health"
        }
        "--temp" = {
            set_if = "$redfish_temp$"
            description = "request temperature sensors health"
        }
        "--fan" = {
            set_if = "$redfish_fan$"
            description = "request fan health"
        }
        "--nic" = {
            set_if = "$redfish_nic$"
            description = "request network interface health"
        }
        "--bmc" = {
            set_if = "$redfish_bmc$"
            description = "request bmc info and status"
        }
        "--info" = {
            set_if = "$redfish_info$"
            description = "request summary of system information"
        }
        "--firmware" = {
            set_if = "$redfish_firmware$"
            description = "request firmware information"
        }
        "--sel" = {
            set_if = "$redfish_sel$"
            description = "request System Log status"
        }
        "--mel" = {
            set_if = "$redfish_mel$"
            description = "request Management Processor Log status"
        }
        "--all" = {
            set_if = "$redfish_all$"
            description = "request data from all components"
        }
        "--retries" = {
            value = "$redfish_retries$"
            description = "set number of maximum retries"
        }
        "--timeout" = {
            value = "$redfish_timeout$"
            description = "set number of request timeout per try/retry"
        }
        "--inventory" = {
            set_if = "$redfish_inventory$"
            description = "request only inventory data from system"
        }
        "--inventory_id" = {
            value = "$redfish_inventory_id$"
            description = "the object identifier ID in the destination inventory system"
        }
        "--inventory_name" = {
            value = "$redfish_inventory_name$"
            description = "the object identifier NAME in the destination inventory system"
        }
        "--inventory_file" = {
            value = "$redfish_inventory_file$"
            description = "the inventory file to write inventory JSON data to"
        }
        "--log_exclude" = {
            value = "$redfish_log_exclude$"
            description = "a comma separated list of log lines (regex) to exclude from log status checks (--sel, --mel)"
        }
        "--ignore_missing_ps" = {
            set_if = "$redfish_ignore_missing_ps$"
            description = "ignore the fact that no power supplies are present and \
                           report the status of the power subsystem"
        }
        "--enable_bmc_security_warning" = {
            set_if = "$redfish_enable_bmc_security_warning$"
            description = "return status WARNING if BMC security issues are detected (HPE iLO only)"
        }
        "--ignore_unavailable_resources" = {
            set_if = "$redfish_ignore_unavailable_resources$"
            description = "ignore all 'UNKNOWN' errors which indicate missing resources and report as OK"
        }
        "--ignore_unknown_on_critical_or_warning" = {
            set_if = "$redfish_ignore_unknown_on_critical_and_warning$"
            description = "suppress all 'UNKNOWN' errors if other checks returned CRITICAL or WARNING"
        }
    }

    env = {
        CHECK_REDFISH_USERNAME = "$redfish_env_username$"
        CHECK_REDFISH_PASSWORD = "$redfish_env_password$"
    }

}

// EOF
